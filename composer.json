{
  "name": "remorhaz/php-unilex",
  "description": "Unilex: lexical analyzer generator with Unicode support written in PHP",
  "keywords": [
    "lex",
    "lexical analyzer",
    "lexical analyzer generator",
    "tokenizer",
    "tokenizer generator"
  ],
  "homepage": "https://github.com/remorhaz/php-unilex",
  "license": "MIT",
  "authors": [
    {
      "name": "Edward Surov",
      "email": "zoohie@gmail.com",
      "role": "Developer"
    }
  ],
  "bin": [
    "bin/unilex"
  ],
  "require": {
    "php": "~8.2.0 || ~8.3.0 || ~8.4.0",
    "phpdocumentor/reflection-docblock": "^4.3 || ^5",
    "nikic/php-parser": "^4.12 || ^5",
    "remorhaz/int-rangesets": "dev-master",
    "remorhaz/ucd": "dev-master",
    "symfony/console": "^6.1 || ^7",
    "thecodingmachine/safe": "^3.2"
  },
  "require-dev": {
    "infection/infection": "^0.29",
    "phpunit/phpunit": "^11 || ^12",
    "rector/rector": "^2.0",
    "squizlabs/php_codesniffer": "^3.13"
  },
  "autoload": {
    "psr-4": {
      "Remorhaz\\UniLex\\": "src/"
    }
  },
  "autoload-dev": {
    "psr-4": {
      "Remorhaz\\UniLex\\Test\\": "tests/",
      "Remorhaz\\UniLex\\Example\\Brainfuck\\": "examples/Brainfuck/src/",
      "Remorhaz\\UniLex\\Example\\Brainfuck\\Test\\": "examples/Brainfuck/tests/",
      "Remorhaz\\UniLex\\Example\\SimpleExpr\\": "examples/SimpleExpr/src/",
      "Remorhaz\\UniLex\\Example\\SimpleExpr\\Test\\": "examples/SimpleExpr/tests/"
    }
  },
  "scripts": {
    "build-example-brainfuck": [
      "php bin/unilex build-token-matcher examples/Brainfuck/spec/LexerSpec.php examples/Brainfuck/src/Grammar/TokenMatcher.php --desc='Brainfuck token matcher.'",
      "php bin/unilex build-lookup-table examples/Brainfuck/src/Grammar/Config.php examples/Brainfuck/src/Grammar/LookupTable.php --type=ll-1 --desc='Brainfuck LL(1) parser lookup table.' --symbol=Remorhaz\\\\UniLex\\\\Example\\\\Brainfuck\\\\Grammar\\\\SymbolType --token=Remorhaz\\\\UniLex\\\\Example\\\\Brainfuck\\\\Grammar\\\\TokenType",
      "vendor/bin/phpcbf -p examples/Brainfuck/src/Grammar/LookupTable.php examples/Brainfuck/src/Grammar/TokenMatcher.php; if [ $? -eq 1 ]; then exit 0; fi"
    ],
    "build-examples": [
      "@build-example-brainfuck"
    ],
    "build-regexp": [
      "php bin/unilex build-token-matcher spec/RegExp/LexerSpec.php src/RegExp/Grammar/TokenMatcher.php --desc='RegExp token matcher.'",
      "php bin/unilex build-lookup-table src/RegExp/Grammar/Config.php src/RegExp/Grammar/LookupTable.php --type=ll-1 --desc='RegExp LL(1) parser lookup table.' --symbol=Remorhaz\\\\UniLex\\\\RegExp\\\\Grammar\\\\SymbolType --token=Remorhaz\\\\UniLex\\\\RegExp\\\\Grammar\\\\TokenType",
      "vendor/bin/phpcbf -p src/RegExp/Grammar/LookupTable.php src/RegExp/Grammar/TokenMatcher.php; if [ $? -eq 1 ]; then exit 0; fi"
    ],
    "build-unicode": [
      "php bin/unilex build-token-matcher spec/Unicode/Utf8LexerSpec.php src/Unicode/Grammar/Utf8TokenMatcher.php --desc='Unicode UTF-8 token matcher.'",
      "vendor/bin/phpcbf -p src/Unicode/Grammar/Utf8TokenMatcher.php; if [ $? -eq 1 ]; then exit 0; fi"
    ],
    "build-core": [
      "@build-regexp",
      "@build-unicode"
    ],
    "build": [
      "@build-core",
      "@build-examples"
    ],
    "test-cs": [
      "vendor/bin/phpcs -sp"
    ],
    "test-unit": [
      "vendor/bin/phpunit --coverage-xml=build/logs/coverage-xml --coverage-clover=build/logs/clover.xml --log-junit=build/logs/junit.xml"
    ],
    "test": [
      "@test-cs",
      "@test-unit"
    ],
    "infection": [
      "mkdir -p build/logs/infection",
      "vendor/bin/infection --threads=4 --coverage=build/logs --no-progress --skip-initial-tests"
    ],
    "test-infection": [
      "@test-unit",
      "@infection"
    ]
  },
  "config": {
    "allow-plugins": {
      "infection/extension-installer": true
    },
    "process-timeout": 0,
    "sort-packages": true
  },
  "repositories": [
    {
      "type": "vcs",
      "url": "https://github.com/JustinElst/php-int-rangesets"
    },
    {
      "type": "vcs",
      "url": "https://github.com/JustinElst/php-ucd"
    }
  ]
}
